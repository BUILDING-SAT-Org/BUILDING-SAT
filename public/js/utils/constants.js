const GWP_UNIT = "kg CO \u2082 - eq";
const GWP_UNIT_LABEL = "Global warming </br> potential (kg CO2-eq)";
const VERTICAL_ALIGINMENT_SPAN = "<span style='width: 50px'></span><br/>";
const M = "<span class='bsat-unit'>m</span>";
const M2 = "<span class='bsat-unit'>m<sup class='bsat-superscript'>2</sup></span>";
const M3 = "<span class='bsat-unit'>m<sup class='bsat-superscript'>3</sup></span>";
const KM = "<span class='bsat-unit'>km</span>";
const YEARS = "<span class='bsat-unit'>years</span>";
const PERCENTAGE = "<span class='bsat-unit'>%</span>";
const KWH = "<span class='bsat-unit'>kWh</span>";
const L = "<span class='bsat-unit'>L</span>";
const KG = "<span class='bsat-unit'>kg</span>";

const ENTRY_TOOLTIPS = {
    quantity: "This is qty",
    difficultyLevel: "difficultyLevel",
    machinery: "Machinery",
    machineHours: "machineHours",
    machineryCO2e: "machineryCO2e",
    spoilTransportOutside: "spoilTransport",
    spoilTransportInside: "spoilTransport Inside",
    totalQuantity: "totalQuantity",
    spoilTransportVehicle: "spoilTransportVehicle",
    location: "location",
    otherLocation: "otherLocation",
    otherLocationDistance: "otherLocationDistance",
    totalDistance: "totalDistance",
    transportCO2e: "transportCO2e",
    material: "material",
    wastage: "Wastage",
}

const ENTRY_LABELS = {
    quantity: "Quantity",
    difficultyLevel: "Difficulty LeveL",
    machinery: "Machinery",
    machineHours: "Machine Hours",
    machineryCO2e: "CO2e (kg)",
    spoilTransportOutside: "Spoil Transported Outside",
    spoilTransportInside: "spoilTransport Inside",
    totalQuantity: "Total Quantity",
    spoilTransportVehicle: "Mode of Transport",
    location: "Unloading Destination",
    otherLocation: "Location",
    otherLocationDistance: "Distance",
    totalDistance: "Total Distance",
    transportCO2e: "CO2e (kg)",
    material: "Material",
    wastage: "Wastage",
}

const BSAT_TOOLTIPS = {
    bsatEarthWorkEntry: {
        quantity: "Quantity is the volume of soil in " + M3 + " that requires excavation.",
        quantitySiteClearance: "Quantity is the area of land in " + M2 + " that requires site clearance. Note that 200" +
            " mm thick of topsoil removal will be considered across the full area specified",
        difficultyLevelSiteClearance: "Low - Fairly flat land surface/ grass" +
            "<br/> Medium - Sloped land with small trees/ bushes/ few boulders" +
            "<br/> High - Sloped land with large trees/ roots/ large boulders",
        difficultyLevelSoilExcavation: "Low - Sand, Gravel" +
            "<br/> Medium - Clay, Clayey gravel" +
            "<br/> High - Hard soil",
        difficultyLevelRockExcavation: "Low - weathered rock" +
            "<br/> Medium - Fractured rock" +
            "<br/> High - Solid rock",
        machinery: "Accounts for the machinery usage. Select the most appropriate machinery/ies used.",
        machineHours: "No. of hours machinery is used",
        machineryCO2e: "",
        spoilTransportOutside: "If excavated material needs to be transported out of site, fill the details below",
        totalQuantity: "",
        spoilTransportVehicle: "Choose appropriate transport with sufficient capacity",
        location: "Location of site where unloading takes place",
        otherLocation: "",
        otherLocationDistance: "",
        totalDistance: "Total distance (km) = One-way distance x No. of trips (taking into consideration the vehicle capacity)",
        transportCO2e: "",
    },
    bsatEarthWorkBackFillingEntry: {
        material: "Type of material used for back filling",
        quantity: "Materials quantity required for the activity in " + M3,
        machinery: "Accounts for the machinery usage. Select the most appropriate machinery/ies used.",
        machineHours: "No. of hours machinery is used",
        machineryCO2e: "",
        spoilTransportInside: "Is Backfilling material transported into the site?",
        totalQuantity: "\"Quantity\" with added %wastage",
        wastage: "% of waste from total quantity that is accounted as wastage",
        spoilTransportVehicle: "Choose appropriate transport with sufficient capacity",
        location: "Location where resources are to be found",
        otherLocation: "",
        otherLocationDistance: "",
        totalDistance: "Total distance (km) = One-way distance x No. of trips (taking into consideration the vehicle capacity)",
        transportCO2e: "",
    },
    bsatSubStructureEntry: {
        material: "Materials type required for the activity",
        quantity: "Required material quantity to be entered in the unit specified in the database for the material type chosen",
        serviceLife: "Service life of the material in years",
        wastage: "% of waste from total quantity that is accounted as wastage",
        localResourceLocation: "Location where resources are to be found (within Sri Lanka)",
        otherLocation: "",
        localDistance: "Total distance travelled in km (Only one- way distance is accounted for. Can edit if needed)",
        localTransport: "Choose appropriate transport with sufficient capacity",
        overseasDistance: "Total distance travelled in km (Only one- way distance is accounted for.)",
        overseasTransport: "Choose appropriate transport with sufficient capacity",
        totalCo2e: "",
    },
    bsatMortarSubStructureEntry: {
        material: "If the mortar is site mixed, fill this entry by selecting the type of activity. Resource (sand and" +
            " cement) locations need to be selected; however, their quantities will be calculated for you based on 1:6 cement sand ratio.",
        area: "Enter the area of the selected activity in " + M2,
        thickness: "Enter the thickness of the selected activity in (" + M + ")",
        serviceLife: "It does not have a default value coming. Better to make it equal to the service life of the" +
            " building.",
        wastage: "% of waste from total quantity that is accounted as wastage",
        sandResourceLocation: "Location where resources are to be found (within Sri Lanka)",
        otherSandResourceLocation: "",
        sandTransportDistance: "Total distance travelled in km (Only one- way distance is accounted for. Can edit if needed)",
        sandTransportVehicle: "Choose appropriate transport with sufficient capacity",
        cementResourceLocation: "Location where resources are to be found (within Sri Lanka)",
        otherCementResourceLocation: "",
        cementTransportDistance: "Total distance travelled in km (Only one- way distance is accounted for. Can edit if needed)",
        cementTransportVehicle: "Choose appropriate transport with sufficient capacity",
        totalCo2e: "",
    },
    bsatSuperStructureEntry: {
        material: "Materials type required for the activity",
        quantity: "Required material quantity to be entered in the unit specified in the database for the material type chosen",
        serviceLife: "Service life of the material in years",
        wastage: "% of waste from total quantity that is accounted as wastage",
        localResourceLocation: "Location where resources are to be found (within Sri Lanka)",
        otherLocation: "",
        localDistance: "Total distance travelled in km (Only one- way distance is accounted for. Can edit if needed)",
        localTransport: "Choose appropriate transport with sufficient capacity",
        overseasDistance: "Total distance travelled in km (Only one- way distance is accounted for.)",
        overseasTransport: "Choose appropriate transport with sufficient capacity",
        totalCo2e: "",
    },
    bsatMortarSuperStructureEntry: {
        material: "If the mortar is site mixed, fill this entry by selecting the type of activity. Resource (sand and" +
            " cement) locations need to be selected; however, their quantities will be calculated for you based on 1:6 cement sand ratio.",
        area: "Enter the area of the selected activity in " + M2,
        thickness: "Enter the thickness of the selected activity in (" + M + ")",
        serviceLife: "It does not have a default value coming. Better to make it equal to the service life of the" +
            " building.",
        wastage: "% of total quantity that is accounted for wastage",
        sandResourceLocation: "Location where resources are to be found",
        otherSandResourceLocation: "",
        sandTransportDistance: "Total distance travelled in km (Only one- way distance is accounted for.)",
        sandTransportVehicle: "Choose appropriate transport with sufficient capacity",
        cementResourceLocation: "Location where resources are to be found",
        otherCementResourceLocation: "",
        cementTransportDistance: "Total distance travelled in km (Only one- way distance is accounted for.)",
        cementTransportVehicle: "Choose appropriate transport with sufficient capacity",
        totalCo2e: "",
    },
    bsatInternalExternalEntry: {
        material: "Materials type required for the activity",
        quantity: "Required material quantity to be entered in the unit specified in the database for the material type chosen",
        serviceLife: "Service life of the material in years",
        wastage: "% of waste from total quantity that is accounted as wastage",
        localResourceLocation: "Location where resources are to be found (within Sri Lanka)",
        otherLocation: "",
        localDistance: "Total distance travelled in km (Only one- way distance is accounted for. Can edit if needed)",
        localTransport: "Choose appropriate transport with sufficient capacity",
        overseasDistance: "Total distance travelled in km (Only one- way distance is accounted for.)",
        overseasTransport: "Choose appropriate transport with sufficient capacity",
        totalCo2e: "",
    },
    bsatMortarInternalExternalEntry: {
        material: "If the mortar is site mixed, fill this entry by selecting the type of activity. Resource (sand and" +
            " cement) locations need to be selected; however, their quantities will be calculated for you based on 1:6 cement sand ratio.",
        area: "Enter the area of the selected activity in " + M2,
        thickness: "Enter the thickness of the selected activity in (" + M + ")",
        serviceLife: "It does not have a default value coming. Better to make it equal to the service life of the" +
            " building.",
        wastage: "% of total quantity that is accounted for wastage",
        sandResourceLocation: "Location where resources are to be found",
        otherSandResourceLocation: "",
        sandTransportDistance: "Total distance travelled in km (Only one- way distance is accounted for.)",
        sandTransportVehicle: "Choose appropriate transport with sufficient capacity",
        cementResourceLocation: "Location where resources are to be found",
        otherCementResourceLocation: "",
        cementTransportDistance: "Total distance travelled in km (Only one- way distance is accounted for.)",
        cementTransportVehicle: "Choose appropriate transport with sufficient capacity",
        totalCo2e: "",
    },
    bsatConstructionOperationEntry: {
        material: "Choose appropriate type of material for source of site",
        quantity: "Specify required quantity in given units",
        quantityElectricity: "Specify required quantity in given units",
        quantityWater: "Specify required quantity in given units",
        quantityFuel: "Specify required quantity in given units",
        totalCo2e: "",
    },
    bsatConstructionOperationWasteEntry: {
        material: "Choose appropriate type of waste generated in site",
        quantity: "Specify quantity in given units",
        location: "",
        otherLocation: "",
        otherLocationDistance: "",
        wasteTransportVehicle: "",
        totalDistance: "",
        totalCo2e: "",
    },
    bsatEnergyConsumptionEntry: {
        material: "Choose appropriate type of material for source of site",
        quantity: "Specify required quantity in given units",
        quantityElectricity: "Specify required quantity in given units",
        quantityEnergy: "Specify required quantity in given units",
        quantityFuel: "Specify required quantity in given units",
        totalCo2e: "",
    },
    bsatWaterConsumptionEntry: {
        material: "Choose appropriate type of water source for the site",
        quantity: "Specify required quantity in given units",
        totalCo2e: "",
    },
    bsatDemolitionEntry: {
        material: "Choose appropriate type of material for source of site",
        quantity: "Specify required quantity in given units",
        quantityEnergy: "Specify required quantity in given units",
        quantityFuel: "Specify required quantity in given units",
        totalCo2e: "",
    },
    bsatChemicalEntry: {
        material: "Materials required for the activity",
        area: "Area for plastering",
        thickness: "Thickness of plaster",
        serviceLife: "Service life of the material",
        wastage: "% of total quantity that is accounted for wastage",
        sandResourceLocation: "Location where resources are to be found",
        otherSandResourceLocation: "",
        sandTransportDistance: "Total distance travelled in km (Only one- way distance is accounted for.)",
        sandTransportVehicle: "Choose appropriate transport with sufficient capacity",
        cementResourceLocation: "Location where resources are to be found",
        otherCementResourceLocation: "",
        cementTransportDistance: "Total distance travelled in km (Only one- way distance is accounted for.)",
        cementTransportVehicle: "Choose appropriate transport with sufficient capacity",
        totalCo2e: "",
    },
    userMaterialSchema: {
        material: "",
        category: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        serviceLife: "",
        technicalSpecification: "",
        bulkingDensity: "",
        bulkingFactor: "",
        gwp: "",
        unit: "",
        wastage: "",
    },
    userMachinerySchema: {
        material: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        technicalSpecification: "",
        gwp: "",
        unit: "",
    },
    userVehicleSchema: {
        material: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        loadingCapacity: "",
        technicalSpecification: "",
        gwp: "",
        unit: "",
    },
    bsatMaterialCategorySchema: {
        label: "",
        salvage: "",
        maintenanceReplacement: "",
    },
    bsatMaterialSchema: {
        material: "",
        category: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        serviceLife: "",
        conversionUnit: "",
        technicalSpecification: "",
        bulkingDensity: "",
        bulkingFactor: "",
        gwp: "",
        unit: "",
        wastage: "",
    },
    bsatMortarSchema: {
        material: "",
        mortarPercentage: "",
        sandBulkingFactor: "",
        sandBulkingDensity: "",
        cementBulkingFactor: "",
        cementBulkingDensity: "",
        wastage: "",
        serviceLife: "",
        salvage: "",
        maintenanceReplacement: "",
    },
    bsatMachinerySchema: {
        material: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        technicalSpecification: "",
        gwp: "",
        unit: "",
    },
    bsatVehicleSchema: {
        material: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        loadingCapacity: "",
        technicalSpecification: "",
        gwp: "",
        unit: "",
    },
    bsatElectricitySchema: {
        material: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        technicalSpecification: "",
        gwp: "",
        unit: "",
    },
    bsatWaterTypeSchema: {
        material: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        technicalSpecification: "",
        gwp: "",
        unit: "",
    },
    bsatWasteTypeSchema: {
        material: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        conversionUnit: "",
        technicalSpecification: "",
        bulkingDensity: "",
        bulkingFactor: "",
        gwp: "",
        unit: "",
        wastage: "",
    },
    bsatFuelTypeSchema: {
        material: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        technicalSpecification: "",
        gwp: "",
        unit: "",
    },
    bsatEnergyTypeSchema: {
        material: "",
        country: "",
        year: "",
        standard: "",
        dataSource: "",
        technicalSpecification: "",
        gwp: "",
        unit: "",
    },
    bsatDistanceSchema: {
        origin: "",
        destination: "",
        name: "",
        distance: "",
    },
    bsatLocationsSchema: {
        label: "Location Name"
    },
    bsatDifficultyLevelsSchema: {
        name: "",
        subPhase: "",
        difficultyFactor: "",
        bulkingDensity: "",
        bulkingFactor: "",
    },
    bsatRecommendationsSchema: {
        label: "",
        description: "",
    },
    projectRecommendationsSchema: {
        recommendation: "",
    },
    createProjectModal: {
        name: "",
        projectType: "",
        projectLocation: "",
        country: "",
        location: "Choose the nearest district/ city to your building location. If a district/ city is chosen " +
            "from the drop-down menu, then all distance calculations when needed will be performed automatically as per " +
            "the standard data available in the tool database. However, if you choose to proceed by typing in a district/ " +
            "city that is not available in the drop-down menu, then be prepared to provide the necessary distance " +
            "details as the calculations proceed. Follow the descriptions and pop ups for guidance.",
        buildingType: "Choose the most accurate building type for your project",
        buildingForm: "Choose the most appropriate building form.",
        buildingLifeExpectancy: "Typical life expectancy for buildings vary between 60-120 years",
        buildingDetails: "",
        buildingHeight: "Enter the building height from the lowest sub-grade point to the highest above grade point." +
            "This is a mandatory field the minimum value should be 3.05 m’",
        noFloors: "",
        noFloorsAboveGround: "",
        noFloorsBelowGround: "",
        groundFloorArea: "",
        buildingFootPrint: "Term describes the boundaries of the exterior walls of a building or structure, when" +
            " placed on a piece of property. It can also be the covered area of the roof structure if there are no" +
            " walls surrounding a building or structure.",
        buildingDescription: "",
        description: "Describe the project using key words",
        image: "Max image size is 1MB",
    }
}

const BSAT_LABELS = {
    bsatEarthWorkEntry: {
        quantity: "Quantity (" + M3 + ")",
        quantitySiteClearance: "Quantity (" + M2 + ")",
        difficultyLevel: "Difficulty level",
        machinery: "Machinery",
        machineHours: "Machine hours",
        machineryCO2e: GWP_UNIT,
        spoilTransportOutside: "Spoil transported out of site?",
        totalQuantity: "Total Quantity (" + M3 + ")",
        spoilTransportVehicle: "Mode of transport",
        location: "Unloading destination",
        otherLocation: "Other Location",
        otherLocationDistance: "Other Location <br/> Distance (" + KM + ")",
        totalDistance: "Total distance (" + KM + ")",
        transportCO2e: GWP_UNIT,
    },
    bsatEarthWorkBackFillingEntry: {
        material: "Material",
        quantity: "Quantity (" + M3 + ")",
        machinery: "Machinery type",
        machineHours: "Machine hours",
        machineryCO2e: GWP_UNIT,
        spoilTransportInside: "Spoil transported into the site?",
        totalQuantity: "Total quantity",
        wastage: "Wastage",
        spoilTransportVehicle: "Mode of transport",
        location: "Resource location",
        otherLocation: "Other location",
        otherLocationDistance: "Other Location <br/> Distance (" + KM + ")",
        totalDistance: "Total distance (" + KM + ")",
        transportCO2e: GWP_UNIT,
    },
    bsatSubStructureEntry: {
        material: "Material",
        quantity: "Quantity",
        serviceLife: "Service life <br/> (" + YEARS + ")",
        wastage: "Wastage (" + PERCENTAGE + ")",
        localResourceLocation: "Local <br/> Resource Location",
        otherLocation: "Other Local <br/>  Resource Location",
        localDistance: "Distance <br/> (local) (" + KM + ")",
        localTransport: "Vehicle (local)",
        overseasDistance: "Distance <br/> (overseas) (" + KM + ")",
        overseasTransport: "Vehicle (overseas)",
        totalCo2e: GWP_UNIT,
    },
    bsatMortarSubStructureEntry: {
        material: "Material",
        area: "Area (" + M2 + ")",
        thickness: "Thickness (" + M + ")",
        serviceLife: "Service life <br/> (" + YEARS + ")",
        wastage: "Wastage (" + PERCENTAGE + ")",
        sandResourceLocation: "Resource <br/> Location (sand)",
        otherSandResourceLocation: "Other Resource <br/> Location (sand)",
        sandTransportDistance: "Distance <br/> (sand) (" + KM + ")",
        sandTransportVehicle: "Vehicle (sand)",
        cementResourceLocation: "Resource <br/> Location (cement)",
        otherCementResourceLocation: "Other Resource <br/> Location (cement)",
        cementTransportDistance: "Distance <br/> (cement) (" + KM + ")",
        cementTransportVehicle: "Vehicle (cement)",
        totalCo2e: GWP_UNIT,
    },
    bsatSuperStructureEntry: {
        material: "Material",
        quantity: "Quantity",
        serviceLife: "Service life <br/> (" + YEARS + ")",
        wastage: "Wastage (" + PERCENTAGE + ")",
        localResourceLocation: "Local <br/> Resource Location",
        otherLocation: "Other Local <br/>  Resource Location",
        localDistance: "Distance <br/> (local) (" + KM + ")",
        localTransport: "Vehicle (local)",
        overseasDistance: "Distance <br/> (overseas) (" + KM + ")",
        overseasTransport: "Vehicle (overseas)",
        totalCo2e: GWP_UNIT,
    },
    bsatMortarSuperStructureEntry: {
        material: "Material",
        area: "Area (" + M2 + ")",
        thickness: "Thickness (" + M + ")",
        serviceLife: "Service life <br/> (" + YEARS + ")",
        wastage: "Wastage (" + PERCENTAGE + ")",
        sandResourceLocation: "Resource <br/> Location (sand)",
        otherSandResourceLocation: "Other Resource <br/> Location (sand)",
        sandTransportDistance: "Distance <br/> (sand) (" + KM + ")",
        sandTransportVehicle: "Vehicle (sand)",
        cementResourceLocation: "Resource <br/> Location (cement)",
        otherCementResourceLocation: "Other Resource <br/> Location (cement)",
        cementTransportDistance: "Distance <br/> (cement) (" + KM + ")",
        cementTransportVehicle: "Vehicle (cement)",
        totalCo2e: GWP_UNIT,
    },
    bsatInternalExternalEntry: {
        material: "Material",
        quantity: "Quantity",
        serviceLife: "Service life <br/> (" + YEARS + ")",
        wastage: "Wastage (" + PERCENTAGE + ")",
        localResourceLocation: "Local <br/> Resource Location",
        otherLocation: "Other Local <br/>  Resource Location",
        localDistance: "Distance  <br/> (local) (" + KM + ")",
        localTransport: "Vehicle (local)",
        overseasDistance: "Distance <br/> (overseas) (" + KM + ")",
        overseasTransport: "Vehicle (overseas)",
        totalCo2e: GWP_UNIT,
    },
    bsatMortarInternalExternalEntry: {
        material: "Material",
        area: "Area (" + M2 + ")",
        thickness: "Thickness (" + M + ")",
        serviceLife: "Service life <br/> (" + YEARS + ")",
        wastage: "Wastage (" + PERCENTAGE + ")",
        sandResourceLocation: "Resource <br/> Location (sand)",
        otherSandResourceLocation: "Other Resource <br/> Location (sand)",
        sandTransportDistance: "Distance <br/> (sand) (" + KM + ")",
        sandTransportVehicle: "Vehicle (sand)",
        cementResourceLocation: "Resource <br/> Location (cement)",
        otherCementResourceLocation: "Other Resource <br/> Location (cement)",
        cementTransportDistance: "Distance <br/> (cement) (" + KM + ")",
        cementTransportVehicle: "Vehicle (cement)",
        totalCo2e: GWP_UNIT,
    },
    bsatConstructionOperationEntry: {
        material: "Type of resource",
        quantity: "Quantity",
        quantityElectricity: "Quantity (" + KWH + ")",
        quantityWater: "Quantity (" + L + ")",
        quantityFuel: "Quantity (" + L + ")",
        totalCo2e: GWP_UNIT,
    },
    bsatConstructionOperationWasteEntry: {
        material: "Type of waste",
        quantity: "Quantity (" + KG + ")",
        location: "Dumping Destination",
        otherLocation: "Other Location",
        otherLocationDistance: "Distance to <br/> Destination",
        wasteTransportVehicle: "Mode of transport",
        totalDistance: "Total distance",
        totalCo2e: GWP_UNIT,
    },
    bsatEnergyConsumptionEntry: {
        material: "Type of resource",
        quantity: "Quantity",
        quantityElectricity: "Quantity (" + KWH + ")",
        quantityEnergy: "Quantity (" + KWH + ")",
        quantityFuel: "Quantity (" + L + ")",
        totalCo2e: GWP_UNIT,
    },
    bsatWaterConsumptionEntry: {
        material: "Type of resource",
        quantity: "Quantity (" + L + ")",
        totalCo2e: GWP_UNIT,
    },
    bsatDemolitionEntry: {
        material: "Type of resource",
        quantity: "Quantity",
        quantityElectricity: "Quantity (" + KWH + ")",
        quantityFuel: "Quantity (" + L + ")",
        totalCo2e: GWP_UNIT,
    },
    bsatChemicalEntry: {
        material: "Material",
        quantity: "Quantity",
        serviceLife: "Service life <br/> (" + YEARS + ")",
        wastage: "Wastage (" + PERCENTAGE + ")",
        localResourceLocation: "Local <br/> Resource Location",
        otherLocation: "Other Local <br/>  Resource Location",
        localDistance: "Distance <br/> (local) (" + KM + ")",
        localTransport: "Vehicle (local)",
        overseasDistance: "Distance <br/> (overseas) (" + KM + ")",
        overseasTransport: "Vehicle (overseas)",
        totalCo2e: GWP_UNIT,
    },
    userMaterialSchema: {
        material: "Material Name",
        category: "Material Category",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        serviceLife: "Service Life (years)",
        technicalSpecification: "Technical Specification",
        bulkingDensity: "Bulking Density",
        bulkingFactor: "Bulking Factor",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
        wastage: "Wastage %",
    },
    userMachinerySchema: {
        material: "Machine Name",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        technicalSpecification: "Technical Specification",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
    },
    userVehicleSchema: {
        material: "Vehicle Name",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        loadingCapacity: "Loading Capacity",
        technicalSpecification: "Technical Specification",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
    },
    bsatMaterialCategorySchema: {
        label: "Category Name",
        salvage: "Salvage",
        maintenanceReplacement: "Maintenance and Replacement",
    },
    bsatMaterialSchema: {
        material: "Material Name",
        category: "Material Category",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        serviceLife: "Service Life (years)",
        conversionUnit: "Conversion Unit",
        technicalSpecification: "Technical Specification",
        bulkingDensity: "Bulking Density",
        bulkingFactor: "Bulking Factor",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
        wastage: "Wastage %",
    },
    bsatMortarSchema: {
        material: "Mortar Name",
        mortarPercentage: "Mortar Percentage",
        sandBulkingFactor: "Sand Bulking Factor",
        sandBulkingDensity: "Sand Bulking Density",
        cementBulkingFactor: "Cement Bulking Factor",
        cementBulkingDensity: "Cement Bulking Density",
        wastage: "Wastage %",
        serviceLife: "Service Life (years)",
        salvage: "Salvage",
        maintenanceReplacement: "Maintenance and Replacement",
    },
    bsatMachinerySchema: {
        material: "Machine Name",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        technicalSpecification: "Technical Specification",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
    },
    bsatVehicleSchema: {
        material: "Vehicle Name",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        loadingCapacity: "Loading Capacity",
        technicalSpecification: "Technical Specification",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
    },
    bsatElectricitySchema: {
        material: "Electricity Type",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        technicalSpecification: "Technical Specification",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
    },
    bsatWaterTypeSchema: {
        material: "Water Type",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        technicalSpecification: "Technical Specification",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
    },
    bsatWasteTypeSchema: {
        material: "Waste Name",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        technicalSpecification: "Technical Specification",
        conversionUnit: "Conversion Unit",
        bulkingDensity: "Bulking Density",
        bulkingFactor: "Bulking Factor",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
        wastage: "Wastage",
    },
    bsatFuelTypeSchema: {
        material: "Fuel Type",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        technicalSpecification: "Technical Specification",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
    },
    bsatEnergyTypeSchema: {
        material: "Energy Type",
        country: "Country",
        year: "Year",
        standard: "Standard",
        dataSource: "Data Source",
        technicalSpecification: "Technical Specification",
        gwp: GWP_UNIT_LABEL,
        unit: "Unit",
    },
    bsatDistanceSchema: {
        origin: "Origin",
        destination: "Destination",
        distance: "Distance",
    },
    bsatLocationsSchema: {
        label: "Location Name"
    },
    bsatDifficultyLevelsSchema: {
        name: "Difficulty Name",
        subPhase: "Sub Phase",
        difficultyFactor: "Difficulty Factor",
        bulkingDensity: "Bulking Density",
        bulkingFactor: "Bulking Factor",
    },
    bsatRecommendationsSchema: {
        label: "Title",
        description: "Description",
        hint: "Max 1500 characters",
    },
    projectRecommendationsSchema: {
        recommendation: "Select Recommendation",
    },
    createProjectModal: {
        name: "Project Name",
        projectType: "Project Type",
        projectLocation: "Project Location",
        country: "Country",
        location: "Location",
        buildingType: "Building Type",
        buildingForm: "Building Form",
        buildingLifeExpectancy: "Building Life <br/> Expectancy (" + YEARS + ")",
        buildingDetails: "Building Details",
        buildingHeight: "Height (m)",
        noFloors: "No. of Floors",
        noFloorsAboveGround: "No. of Floors Above Ground",
        noFloorsBelowGround: "No. of Floors Below Ground",
        groundFloorArea: "Gross Floor Area (" + M2 + ")",
        buildingFootPrint: "Building Foot Print (" + M2 + ")",
        buildingDescription: "Project Description",
        description: "Description",
        image: "Image",
    }
}

const LOG_TYPES = {
    EVENT: 1,
    CALCULATION: 2,
    MODEL: 3,
    HTTP_REQUEST: 4,
    ERROR: 9,
}

const CHART_TITLES = {
    constructionPhase: "Global Warming Potential of Construction Site Operations",
    demolitionPhase: "Global Warming Potential of Demolition Activities",
    earthWorkPhase: "Global Warming Potential of Earthwork Activities",
    energyConsumptionPhase: "Global Warming Potential of Energy Consumption Activities",
    internalExternalPhase: "Global Warming Potential of Internal And External Finishes Activities",
    maintenanceReplacementPhase: "Global Warming Potential of Maintenance and Replacement Activities",
    subStructurePhase: "Global Warming Potential of Substructure Activities",
    superStructurePhase: "Global Warming Potential of Superstructure Activities",
    waterConsumptionPhase: "Global Warming Potential of Water Consumption During Operation Phase",
    constructionPhaseResult: "Global Warming Potential of Construction Phase Activities",
    operationPhaseResult: "Global Warming Potential of Operation Phase Activities",
    demolitionPhaseResult: "Global Warming Potential of Demolition Phase Activities",
    summaryResult: "Global Warming Potential of Project",
    xScaleTitle: "Sub Activities"
}

const CHART_COLORS = {
    material: '#f7cc86',
    machinery: '#c3cf9f',
    transportation: '#a3cbcc',
    energy: '#f5d3ce',
    water: '#c1f5bf',
    title: '#000000',
}

const CHART_SLUG_ORDER = {
    earthWorks: ["site_clearance", "soil_excavation", "rock_excavation", "back_filling"],
    subStructure: ["foundation", "retaining_walls", "earth_support_systems", "formwork", "insulation",
        "termite_treatment_and_damp_proof_course", "other_concrete_works", "mortar_substructure"],
    superStructure: ["walls_and_facades", "columns", "beams", "floor_slabs",
        "roof_and_ceiling", "doors_and_windows", "service_equipment", "mortar_superstructure"],
    internalAndExternalFinishes: ["floor_finishes", "wall_finishes", "roof_and_ceiling_finishes", "mortar_internal_and_external_finishes"],
    constructionSiteOperations: ["electricity_use_on_site", "fuel_use_on_site", "water_consumption_on_site", "waste_generated"],
    maintenanceAndReplacement: ["maintenance_and_replacement"],
    energyConsumption: ["electricity_used_during_operation", "fuel_used_during_operation", "exported_energy_during_operation"],
    waterConsumption: ["water_consumption_during_operation"],
    demolitionPhase: ["electricity_use_on_site", "fuel_use_on_site", "chemicals", "landfill_and_salvage"],
}
